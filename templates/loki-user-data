#!/bin/bash

# hostname
hostnamectl set-hostname ${hostname}

# update
apt-get update
DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade

# utilities
apt install -y awscli net-tools jq

# SSM agent
mkdir -p /tmp/ssm
cd /tmp/ssm
wget https://s3.${region}.amazonaws.com/amazon-ssm-${region}/latest/debian_amd64/amazon-ssm-agent.deb
dpkg -i amazon-ssm-agent.deb
systemctl enable amazon-ssm-agent
systemctl start amazon-ssm-agent

# docker
apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
  > /etc/apt/sources.list.d/docker.list
apt update
apt install -y docker-ce
systemctl enable docker
systemctl start docker
usermod -aG docker ubuntu

# loki
mkdir -p /etc/loki
cat > /etc/loki/cluster-config.yaml <<EOF
auth_enabled: false

server:
  http_listen_port: ${rest_port}

common:
  path_prefix: /loki
  replication_factor: 3
  ring:
    kvstore:
      store: memberlist

memberlist:
  join_members:
    [\$${SEEDS}]

schema_config:
  configs:
    - from: 2020-09-07
      store: boltdb-shipper
      object_store: s3
      schema: v11
      index:
        prefix: loki_index_
        period: 24h

storage_config:
  boltdb_shipper:
    shared_store: s3
    active_index_directory: /loki/index
    cache_location: /loki/cache
    cache_ttl: 168h
  aws:
    s3: s3://${region}/${loki_bucket}
    sse_encryption: true

compactor:
  working_directory: /loki/compactor
  shared_store: s3
  compaction_interval: 5m
EOF

mkdir -p /usr/local/sbin/
cat > /usr/local/sbin/start-loki.sh <<EOF
#!/bin/sh
# This retrieves host list ONCE at deployment time
# Probably do not want to do this every time to avoid DoS AWS and avoid human mistakes
export SEEDS=$(/usr/bin/aws --region ${region} ssm get-parameter --name ${ssm_parameter_name} | /usr/bin/jq -r .Parameter.Value)
/usr/bin/docker run --rm \
    --name loki \
    --network host \
    -e SEEDS=\$${SEEDS} \
    -v /etc/loki/cluster-config.yaml:/etc/loki/cluster-config.yaml \
    grafana/loki:${loki_version} \
    -config.expand-env=true \
    -config.file=/etc/loki/cluster-config.yaml
EOF
chmod +x /usr/local/sbin/start-loki.sh

cat > /etc/systemd/system/loki.service <<EOF
[Unit]
Description=Grafana Loki
Wants=docker.service

[Service]
Restart=always
ExecStart=/usr/local/sbin/start-loki.sh
ExecStop=/usr/bin/docker ps | grep loki >/dev/null && /usr/bin/docker stop loki || /bin/true

[Install]
WantedBy=multi-user.target
EOF

systemctl enable loki
systemctl start loki
